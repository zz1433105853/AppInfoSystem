<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.smbms.dao.user.UserMapper">
	<!-- 查询用户表记录数 -->
	<select id="count" resultType="int">
		select count(1) as count from smbms_user
	</select>
	<!-- 登录 -->
	<select id="getUser" resultType="User" parameterType="User">
		select * from smbms_user where userCode = #{userCode}and userPassword= #{userPassword}
	</select> 
	<!-- 根据用户名称查询用户信息（模糊查询） -->
	<select id="getUserListByUserName" resultType="User" parameterType="string">
		select * from smbms_user where userName like CONCAT ('%',#{userName},'%')
	</select>
	<!-- 根据用户名称查询用户信息 Map 集合 -->
	<select id="getUserListByMap" resultType="User" parameterType="Map">
		select * from smbms_user where userName like CONCAT ('%',#{uName},'%') and userRole= #{uRole}
	</select>
	<!-- 根据用户名称查询用户信息（模糊查询） -->
	<select id="getUserList" resultMap="userList">
		select u.*,r.roleName from smbms_user u, smbms_role r where u.userRole= r.id
		
			<if test="userRole!=null and userRole !=0">
				 and u.userRole= #{userRole} 
			</if>
			<if test="userName !=null and userName !=''">
				and u.userName like CONCAT ('%',#{userName},'%') 
			</if>
			     
	</select>
	
	<select id="getUserList1" resultType="User">
		select * from smbms_user 
			<trim prefix="where" prefixOverrides="and | or">
				<if test="userRole!=null ">
				 and userRole= #{userRole} 
				</if>
				<if test="userName !=null and userName !=''">
					and userName like CONCAT ('%',#{userName},'%') 
				</if>			
			</trim>
	
	
	</select>
		<resultMap type="User" id="userList">
		<result property="id" column="id"/>
		<result property="userCode" column="userCode"/>
		<result property="userName" column="userName"/>
		<result property="phone" column="phone"/>
		<result property="birthday" column="birthday"/> 
		<result property="gender" column="gender"/>
		<result property="userRole" column="userRole"/>
		<result property="userRoleName" column="roleName"/>		
	</resultMap>
	<!-- 新增用户 -->
	<insert id="add" parameterType="User">
		insert into smbms_user (userCode,userName,userPassword,gender,birthday,phone,address,userRole,createdBy,creationDate)
		values(#{userCode},#{userName},#{userPassword},#{gender},#{birthday},#{phone},#{address},#{userRole},#{createdBy},#{creationDate})	
	</insert>
	<!-- 修改用户 -->
	<update id="modify" parameterType="User">
		update smbms_user 
		<trim prefix="set" suffixOverrides="," suffix=" where id=#{id}	">
			<if test="userCode !=null">userCode=#{userCode},</if>
			<if test="userName !=null">userName=#{userName},</if>
			<if test="userPassword !=null">userPassword=#{userPassword},</if>
			<if test="gender !=null">gender=#{gender},</if>
			<if test="birthday !=null">birthday=#{birthday},</if>
			<if test="phone !=null">phone=#{phone},</if>
			<if test="address !=null">address=#{address},</if>
			<if test="userRole !=null">userRole=#{userRole},</if>
			<if test="modifyBy !=null">modifyBy=#{modifyBy},</if>
			<if test="modifyDate !=null">modifyDate=#{modifyDate}</if>		
		</trim>		
	</update>
	<!-- 修改用户密码 -->
	<update id="updatePwd">
		update smbms_user set userPassword=#{userPassword} where id=#{id}
	</update>
	
	<!-- 删除用户 -->
	<delete id="deleteUser">	
		delete   from smbms_user where id=#{id}
	</delete>
	<!-- 查询用户角色信息 -->
	<select id="getUserListByRoleId" parameterType="Integer" resultMap="userRoleResult">
		select u.*,r.id as r_id, r.roleCode,r.roleName from smbms_user u,smbms_role r
		 where u.userRole=#{userRole} and u.userRole =r.id
	</select>
	<resultMap type="User" id="userRoleResult">
		<id property="id" column="id"/>
		<result property="userCode" column="userCode"/>
		<result property="userName" column="userName"/>
		<result property="userRole" column="userRole"/>
		<association property="role" javaType="Role" resultMap="roleResult">				
		</association>		
	</resultMap>
	<resultMap type="Role" id="roleResult">
		<id property="id" column="r_id"/>
		<result property="roleCode" column="roleCode"/>
		<result property="roleName" column="roleName"/>			
	</resultMap>
	<!-- 查询用户的地址信息 -->
	<select id="getAddressListByUserId" parameterType="Integer" resultMap="userAddressResult">
		select u.*,a.id as a_id,a.contact,a.addressDesc,a.postCode,a.tel from smbms_user u,smbms_address a
		where u.id=a.userId and u.id=#{id}
	</select>
	
	<resultMap type="User" id="userAddressResult">
		<id property="id" column="id"/>
		<result property="userCode" column="userCode"/>
		<result property="userName" column="userName"/>
		<collection property="addressList" ofType="Address">
			<id property="id" column="a_id"></id>
			<result property="postCode" column="postCode"/>
			<result property="tel" column="tel"/>
			<result property="contact" column="contact"/>
			<result property="addressDesc" column="addressDesc"/>
		</collection>
	</resultMap>
	<!-- 根据用户角色ID删除用户信息 -->
	<delete id="delUserByRoleid">
		delete * from smbms_user where userRole =#{userRole}		
	</delete>
	<!-- 根据ID查询用户 -->
	<select id="getUserByid" parameterType="int" resultType="User">
	
	select * from smbms_user where id= #{id}
	</select>
	
	<!-- 根据角色查询用户信息 使用FOReach -->
	<select id="getUserByRoleId_foreach_array" resultMap="userMapByRole">
		select * from smbms_user where userRole in
			<foreach collection="array" item="roleIds"  open="(" separator="," close=")">
				#{roleIds}
			</foreach>
	</select>
	<resultMap type="User" id="userMapByRole">
		<id property="id" column="id"/>
		<result property="userCode" column="userCode"/>
		<result property="userName" column="userName"/>
	</resultMap>
	
	<!-- 使用角色信息查询用户信息  使用forecha list -->
	<select id="getUserByRoleId_foreach_list" resultMap="userMapByRole">
		select * from smbms_user where userRole in
			<foreach collection="list" item="roleList"  open="(" separator="," close=")">
				#{roleList}
			</foreach>
	</select>
	
	<!-- 使用角色信息查询用户信息  使用forechaMap -->
	<select id="getUserByRoleId_foreach_Map" resultMap="userMapByRole">
		select * from smbms_user where  gender=#{gender} and userRole in
			<foreach collection="roleIds" item="roleMap"  open="(" separator="," close=")">
				#{roleMap}
			</foreach>
	</select>
		<!-- 使用角色信息查询用户信息  使用forechaMap1  单参数 -->
	<select id="getUserByRoleId_foreach_Map1" resultMap="userMapByRole">
		select * from smbms_user where userRole in
			<foreach collection="rKEY" item="roleMap"  open="(" separator="," close=")">
				#{roleMap}
			</foreach>
	</select>
	<!-- 查询用户列表 -->
	<select id="getUselist_choose" resultType="User">
		select * from smbms_user where 1=1
			<choose>
				<when test="userName !=null and userName !=''">
					and userName like CONCAT ('%',#{userName},'%')
				</when>
				<when test="userCode !=null and userCode !=''">
					and userCode like CONCAT ('%',#{uesrCode},'%')
				</when>
				<when test="userRole !=null">
					and userRole= #{userRole}
				</when>
				<otherwise>
					and YEAR (creationDate) =YEAR(#{creationDate})
				</otherwise>
			
			</choose>	
	</select>
	<!-- 查询用户列表分页 -->
	<select id="getUselistP" resultMap="userList">
		select u.*,r.roleName from smbms_user u, smbms_role r  where u.userRole =r.id
			<if test="userRole !=null and userRole !=0">
				and u.userRole =#{userRole}
			</if>
			<if test="userName !=null and userName !=''">
				and userName like CONCAT ('%',#{userName},'%')			
			</if>
			order by creationDate DESC limit #{from},#{pageSize}
	</select>
	<!-- 查询用户名称查询是否存在该用户 -->
	<select id="selectUserCodeExist" parameterType="string" resultType="User">
		select * from smbms_user where  userCode=#{userCode}	
	</select>
</mapper>